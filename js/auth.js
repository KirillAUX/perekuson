// –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
class AuthSystem {
    constructor() {
        this.users = JSON.parse(localStorage.getItem('users')) || [];
        this.currentUser = JSON.parse(localStorage.getItem('currentUser')) || null;
        this.promotions = JSON.parse(localStorage.getItem('promotions')) || [];
        this.init();
    }

    init() {
        // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        this.createDefaultAdmin();
        this.updateUI();
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    createDefaultAdmin() {
        const adminExists = this.users.find(user => user.role === 'admin');
        if (!adminExists) {
            const defaultAdmin = {
                id: '1',
                username: 'admin',
                email: 'admin@perekuson.ru',
                password: 'admin123', // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –Ω—É–∂–Ω–æ —Ö—ç—à–∏—Ä–æ–≤–∞—Ç—å!
                role: 'admin',
                createdAt: new Date().toISOString(),
                phone: '+7 (999) 000-00-00'
            };
            this.users.push(defaultAdmin);
            this.saveUsers();
            console.log('–°–æ–∑–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: admin / admin123');
        }
    }

    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    register(userData) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–∫–∏–º email –∏–ª–∏ username
        const existingUser = this.users.find(user => 
            user.email === userData.email || user.username === userData.username
        );

        if (existingUser) {
            return { success: false, message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email –∏–ª–∏ –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç' };
        }

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const newUser = {
            id: Date.now().toString(),
            username: userData.username,
            email: userData.email,
            password: userData.password,
            phone: userData.phone || '',
            role: 'user', // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            createdAt: new Date().toISOString(),
            orders: []
        };

        this.users.push(newUser);
        this.saveUsers();

        return { success: true, message: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!', user: newUser };
    }

    // –í—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    login(loginData) {
        const user = this.users.find(user => 
            (user.email === loginData.loginEmail || user.username === loginData.loginEmail) && 
            user.password === loginData.loginPassword
        );

        if (user) {
            this.currentUser = user;
            localStorage.setItem('currentUser', JSON.stringify(user));
            this.updateUI();
            return { success: true, message: '–í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω!', user: user };
        } else {
            return { success: false, message: '–ù–µ–≤–µ—Ä–Ω—ã–π email/–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å' };
        }
    }

    // –í—ã—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    logout() {
        this.currentUser = null;
        localStorage.removeItem('currentUser');
        this.updateUI();
        return { success: true, message: '–í—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω' };
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    isAdmin() {
        return this.currentUser && this.currentUser.role === 'admin';
    }

    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫—Ü–∏—è–º–∏
    addPromotion(promotionData) {
        if (!this.isAdmin()) {
            return { success: false, message: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤' };
        }

        const newPromotion = {
            id: Date.now().toString(),
            title: promotionData.title,
            description: promotionData.description,
            image: promotionData.image,
            startDate: promotionData.startDate,
            endDate: promotionData.endDate,
            active: true,
            createdAt: new Date().toISOString(),
            createdBy: this.currentUser.id
        };

        this.promotions.push(newPromotion);
        this.savePromotions();

        return { success: true, message: '–ê–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞', promotion: newPromotion };
    }

    // –£–¥–∞–ª–µ–Ω–∏–µ –∞–∫—Ü–∏–∏
    deletePromotion(promotionId) {
        if (!this.isAdmin()) {
            return { success: false, message: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤' };
        }

        const promotionIndex = this.promotions.findIndex(p => p.id === promotionId);
        if (promotionIndex === -1) {
            return { success: false, message: '–ê–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' };
        }

        this.promotions.splice(promotionIndex, 1);
        this.savePromotions();

        return { success: true, message: '–ê–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞' };
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∞–∫—Ü–∏–π
    getPromotions() {
        return this.promotions.filter(promotion => promotion.active);
    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ localStorage
    saveUsers() {
        localStorage.setItem('users', JSON.stringify(this.users));
    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–∫—Ü–∏–π –≤ localStorage
    savePromotions() {
        localStorage.setItem('promotions', JSON.stringify(this.promotions));
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    updateUI() {
        const profileBtn = document.getElementById('profileBtn');
        const dropdownMenu = document.getElementById('dropdownMenu');
        const statusElement = document.getElementById('status');
        const authStatus = document.querySelector('.auth-status');
        const adminPanelBtn = document.getElementById('adminPanelBtn');

        if (this.currentUser && profileBtn) {
            // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
            const guestMenu = dropdownMenu?.querySelector('.menu-guest');
            const userMenu = dropdownMenu?.querySelector('.menu-user');
            
            if (guestMenu) guestMenu.style.display = 'none';
            if (userMenu) userMenu.style.display = 'block';
            
            profileBtn.textContent = this.currentUser.username.substring(0, 2).toUpperCase();
            profileBtn.classList.add('authenticated');
            
            if (statusElement) {
                let statusText = `–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫ ${this.currentUser.username}`;
                if (this.isAdmin()) {
                    statusText += ' (–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)';
                }
                statusElement.textContent = statusText;
                statusElement.classList.add('authenticated');
            }
            
            if (authStatus) {
                authStatus.classList.add('authenticated');
                if (this.isAdmin()) {
                    authStatus.style.borderLeftColor = '#dc3545';
                }
            }

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
            if (adminPanelBtn && this.isAdmin()) {
                adminPanelBtn.style.display = 'block';
            }
        } else if (profileBtn) {
            // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
            const guestMenu = dropdownMenu?.querySelector('.menu-guest');
            const userMenu = dropdownMenu?.querySelector('.menu-user');
            
            if (guestMenu) guestMenu.style.display = 'block';
            if (userMenu) userMenu.style.display = 'none';
            
            profileBtn.textContent = 'üë§';
            profileBtn.classList.remove('authenticated');
            
            if (statusElement) {
                statusElement.textContent = '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω';
                statusElement.classList.remove('authenticated');
            }
            
            if (authStatus) {
                authStatus.classList.remove('authenticated');
            }

            // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
            if (adminPanelBtn) {
                adminPanelBtn.style.display = 'none';
            }
        }
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    getCurrentUser() {
        return this.currentUser;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    isAuthenticated() {
        return this.currentUser !== null;
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
const authSystem = new AuthSystem();

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ HTML
function logout() {
    authSystem.logout();
    window.location.href = 'index.html';
}

function showMessage(message, type = 'success') {
    const messageElement = document.getElementById('message');
    if (messageElement) {
        messageElement.textContent = message;
        messageElement.className = `message ${type}`;
        messageElement.style.display = 'block';
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            messageElement.style.display = 'none';
        }, 5000);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞/—Å–∫—Ä—ã—Ç–∏—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
function toggleAdminPanel() {
    const adminPanel = document.getElementById('adminPanel');
    if (adminPanel) {
        adminPanel.style.display = adminPanel.style.display === 'none' ? 'block' : 'none';
    }
}